// Generated by CoffeeScript 1.7.1
(function() {
  var EventClientID, EventClients, EventInterval, messages, utils;

  utils = require("./utils");

  messages = exports;

  EventClients = {};

  EventClientID = 0;

  EventInterval = null;

  messages.sendMessage = function(msg) {
    var data, eventClient, id;
    msg = JSON.stringify(msg);
    data = "data: " + msg + "\n\n";
    for (id in EventClients) {
      eventClient = EventClients[id];
      eventClient.response.write(data);
    }
  };

  messages.handleHttpRequest = function(request, response) {
    var eventClient;
    if (!request.headers.accept) {
      return response.send(500, "expecting an Accept header of `text/event-stream`");
    }
    if (request.headers.accept !== "text/event-stream") {
      return response.send(500, "expecting an Accept header of `text/event-stream`");
    }
    response.writeHead(200, {
      "Content-Type": "text/event-stream",
      "Cache-Control": "no-cache",
      "Connection": "keep-alive"
    });
    eventClient = {
      id: EventClientID++,
      response: response
    };
    EventClients[eventClient.id] = eventClient;
    utils.log("event stream " + eventClient.id + " opened");
    response.on("close", function() {
      utils.log("event stream " + eventClient.id + " closed");
      return delete EventClients[eventClient.id];
    });
  };

}).call(this);
