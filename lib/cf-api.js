// Generated by CoffeeScript 1.7.1
(function() {
  var cf, curl, exec;

  curl = require("./curl");

  exec = require("./exec");

  cf = exports;

  cf.exec = function(args) {
    return exec(args);
  };

  cf.getApi = function() {
    return cf.exec(["api"]).then(function(_arg) {
      var api, code, match, stderr, stdout, version;
      code = _arg.code, stdout = _arg.stdout, stderr = _arg.stderr;
      if (code) {
        throw Error("exit code: " + code);
      }
      match = stdout.match(/API endpoint: (.*?) \(API version: (.*?)\)/);
      if (match == null) {
        throw Error("unexpected output: " + stdout);
      }
      api = match[1];
      version = match[2];
      return {
        api: api,
        version: version
      };
    });
  };

  cf.getInfo = function() {
    return curl.get("/v2/info").then(function(_arg) {
      var code, stderr, stdout;
      code = _arg.code, stdout = _arg.stdout, stderr = _arg.stderr;
      if (code) {
        throw Error("exit code: " + code);
      }
      return JSON.parse(stdout);
    });
  };

  cf.getTarget = function() {
    return cf.exec(["target"]).then(function(_arg) {
      var code, match, org, space, stderr, stdout, url, user, version;
      code = _arg.code, stdout = _arg.stdout, stderr = _arg.stderr;
      if (code) {
        throw Error("exit code: " + code);
      }
      match = stdout.match(/API endpoint: (.*?) \(API version: (.*?)\)/);
      if (match == null) {
        throw Error("unexpected output: " + stdout);
      }
      url = match[1];
      version = match[2];
      match = stdout.match(/\nUser:\s*(.*)\n/);
      if (match == null) {
        throw Error("unexpected output: " + stdout);
      }
      user = match[1];
      match = stdout.match(/\nOrg:\s*(.*)\n/);
      if (match == null) {
        throw Error("unexpected output: " + stdout);
      }
      org = match[1];
      match = stdout.match(/\nSpace:\s*(.*)\n/);
      if (match == null) {
        throw Error("unexpected output: " + stdout);
      }
      space = match[1];
      return {
        url: url,
        version: version,
        user: user,
        org: org,
        space: space
      };
    });
  };

}).call(this);
