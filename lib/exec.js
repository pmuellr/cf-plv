// Generated by CoffeeScript 1.7.1
(function() {
  var Env, ExecOptions, child_process, concat, exec, q, _;

  child_process = require("child_process");

  q = require("q");

  _ = require("underscore");

  concat = require("concat-stream");

  Env = _.clone(process.env);

  Env.CF_COLOR = "false";

  ExecOptions = {
    env: Env,
    stdio: ["ignore", "pipe", "pipe"]
  };

  module.exports = exec = function(args) {
    var child, childStderr, childStdout, deferred, readStderr, readStdout;
    child = child_process.spawn("cf", args, ExecOptions);
    deferred = q.defer();
    childStdout = null;
    childStderr = null;
    readStdout = concat({
      encoding: "string"
    }, function(data) {
      return childStdout = data;
    });
    readStderr = concat({
      encoding: "string"
    }, function(data) {
      return childStderr = data;
    });
    child.stdout.pipe(readStdout);
    child.stderr.pipe(readStderr);
    child.on("error", function(error) {
      return deferred.reject({
        error: error
      });
    });
    child.on("exit", function(code) {
      var value;
      value = {
        code: code,
        stdout: childStdout || "",
        stderr: childStderr || ""
      };
      return deferred.resolve(value);
    });
    return deferred.promise;
  };

}).call(this);
